{"version":3,"sources":["reportWebVitals.ts","shared/components/Button.tsx","shared/components/Card.tsx","shared/components/Header.tsx","shared/components/InputField.tsx","lang.ts","shared/components/StarRating.tsx","movies/components/AddMovieButton.tsx","movies/components/AddMovieForm.tsx","movies/ratings.ts","api/movies.ts","movies/components/MovieProvider.tsx","movies/useMovies.tsx","movies/components/MovieCard.tsx","movies/components/MovieList.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Button","onClick","children","className","style","classNames","type","event","preventDefault","Card","Header","props","title","InputField","name","value","setter","htmlFor","id","placeholder","onChange","target","range","size","startAt","Array","keys","map","i","styles","starsInner","width","starsEmptyInner","position","starsOuter","overflow","star","padding","cropWidth","rating","Math","floor","StarRating","onRate","containerStyle","AddMovieButton","cursor","paddingTop","paddingBottom","textAlign","fontSize","AddMovieForm","onSubmit","onCancel","useState","url","setUrl","setTitle","subtitle","setSubtitle","description","setDescription","imageUrl","getAvgRating","movie","ratings","length","num","avgRating","reduce","a","b","round","Number","EPSILON","getMovies","require","MovieContext","React","createContext","undefined","MovieProvider","useReducer","state","action","movies","payload","data","initialized","newMovie","uuid","addMovieListCopy","push","deleteMovieListCopy","filter","movieId","dispatch","useEffect","fetchData","result","useMoviesCollection","moviesDispatch","Provider","useMovies","moviesCtx","useContext","Error","MovieCard","src","alt","movieDeleteAction","deleteAction","MovieList","displayOptionType","setDisplayOptionType","changeNewMovieMode","movieAddAction","addNewMovie","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48ed603e.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\n\ninterface ButtonProps {\n    onClick?: () => void,\n    children: string,\n    className?: string,\n    style?: string\n}\n\nexport function Button({ onClick = () => {}, children, className,  style=\"primary\" }: ButtonProps) {\n  const onClickHandler = (event: React.MouseEvent<HTMLElement>) => {\n    event.preventDefault();\n    onClick();\n  }\n\n  const classNames = `mx-1 btn btn-${style}` + (className ? (\" \" + className) : '');\n\n  return (\n    <button type=\"button\" className={classNames} onClick={onClickHandler}>\n      {children}\n    </button>\n  );\n}\n","import { ReactNode } from \"react\";\n\ninterface CardProps {\n  children: ReactNode\n}\n\nexport function Card({ children }: CardProps) {\n  return (\n    <div className=\"movie-card\">\n      <div className=\"movie-card card\">\n        {children}\n      </div>\n    </div>\n  );\n}\n","interface HeaderProps {\n    title: string\n};\n\nexport const Header = (props: HeaderProps) => (\n  <nav className=\"header navbar navbar-dark bg-dark\">\n    <div className=\"container\">\n      <div className=\"row m-auto\">\n        <i className=\"fa fa-film fa-2x text-white my-auto\"></i>\n        <div className=\"h3 ml-3 my-auto text-light\">\n          {props.title}\n        </div>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\ninterface InputFieldProps {\n  name: string,\n  value?: string,\n  setter?: React.Dispatch<React.SetStateAction<string>>,\n  type?: string\n}\n\nexport function InputField({name, value, setter, type=\"text\"}: InputFieldProps) {\n  return (\n    <div className=\"form-group\">\n      <label className=\"text-capitalize\" htmlFor={name}>{name}</label>\n      <input\n        type={type}\n        name={name}\n        className=\"form-control\"\n        id={name}\n        aria-describedby={name + \"Help\"}\n        placeholder={\"Enter \" + name}\n        value={value}\n        onChange={(event) => {\n          if (!setter) return\n          setter(event.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","export function range(size: number, startAt = 0) {\n    return [...Array(size).keys()].map(i => i + startAt);\n}\n","import React from 'react';\n\nimport { range } from 'lang';\n\nconst width = 110;\n\ninterface classesType {\n    [className: string]: React.CSSProperties\n}\n\nconst styles: classesType = {\n  starsInner: {\n    width: `${width}px`,\n  },\n  starsEmptyInner: {\n    position: 'absolute',\n    width: `${width}px`,\n  },\n  starsOuter: {\n    overflow: 'hidden',\n  },\n  star: {\n    padding: '1px',\n  },\n};\n\nconst cropWidth = (rating: number) => {\n  return Math.floor((rating * width) / 5);\n};\n\ninterface StarRatingProps {\n  rating: number\n  onRate: (rating: number) => void\n}\n\nexport const StarRating = ({ rating, onRate }: StarRatingProps) => {\n  const containerStyle = { width: `${cropWidth(rating)}px` };\n\n  return (\n    <div>\n      <div style={styles.starsOuter}>\n        <div id=\"rate-container\" style={containerStyle}>\n          <div style={styles.starsEmptyInner}>\n            {range(5, 1).map(i => <i key={i} className=\"fa fa-star-o fa-lg\" onClick={() => onRate(i)} style={styles.star}></i>)}\n          </div>\n          <div style={styles.starsInner}>\n            {range(5, 1).map(i => <i key={i} className=\"fa fa-star fa-lg\" data-testid=\"star-item\" onClick={() => onRate(i)} style={styles.star}></i>)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","interface AddMovieButtonProps {\n  onClick: () => void\n}\n\nexport function AddMovieButton({ onClick }: AddMovieButtonProps) {\n  return (\n    <div style={{cursor: \"pointer\", paddingTop: \"7rem\", paddingBottom: \"7rem\", textAlign: \"center\"}} onClick={() => {onClick()}} >\n      <div style={{fontSize: \"8rem\"}}>+</div>\n      <div className=\"button-label\"></div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nimport { InputField, Button } from 'shared/components';\n\ninterface AddMovieFormProps {\n  onSubmit: (data: Record< \"imageUrl\" | \"title\" | \"subtitle\" | \"description\", string>) => void,\n  onCancel: () => void,\n}\n\nexport function AddMovieForm({ onSubmit, onCancel }: AddMovieFormProps) {\n  const [url, setUrl] = useState(\"\")\n  const [title, setTitle] = useState(\"\") \n  const [subtitle, setSubtitle] = useState(\"\")\n  const [description, setDescription] = useState(\"\")\n\n  return (\n    <form className=\"p-4 \">\n      <InputField name=\"Url\" setter={setUrl}/>\n      <InputField name=\"Title\" setter={setTitle}/>\n      <InputField name=\"Subtitle\" setter={setSubtitle}/>\n      <InputField name=\"Description\" setter={setDescription}/>\n      <div className=\"text-center\">\n      <Button onClick={() => {\n        onSubmit({\n          imageUrl: url,\n          title,\n          subtitle,\n          description\n        })}}\n      >\n        Submit\n      </Button>\n      <Button onClick={() => {onCancel()}}>\n        Cancel\n      </Button>\n      </div>\n    </form>\n  );\n}\n","import { Movie } from \"types\";\n\nfunction to2(num: number) {    \n    return Math.round((num + Number.EPSILON) * 100) / 100;\n}\n\nexport function getAvgRating(movie: Movie) {\n    if (movie.ratings.length === 0) {\n        return 0\n    }\n\n    const avgRating = movie.ratings.reduce((a, b) => a + b) / movie.ratings.length\n    return to2(avgRating)\n}\n","import { Movie } from \"types\"\n\nexport const getMovies = async (): Promise<Movie[]> => {\n    return require('../data/movies.json')\n}\n","import { useMoviesCollection } from 'movies/useMovies';\nimport React, { useContext } from 'react'\n\nimport { Movie, MoviesAction } from 'types';\n\ntype MovieContextType = {\n    movies: Movie[]\n    moviesDispatch: React.Dispatch<MoviesAction>\n}\n\nexport const MovieContext = React.createContext<MovieContextType | undefined>(undefined);\n\nexport const MovieProvider: React.FC = ({ children }) => {\n    const [{ initialized, movies }, moviesDispatch] = useMoviesCollection();\n    return (\n        <MovieContext.Provider value={{ movies, moviesDispatch }}>\n            { initialized ? children : <div>loading...</div>}\n        </MovieContext.Provider>\n    )\n}\n\nexport const useMovies = () => {\n    const moviesCtx = useContext(MovieContext);\n    if (!moviesCtx) {\n        throw new Error(\"Component beyond MovieContext!\")\n    }\n    return moviesCtx;\n}\n","import React, { useReducer, useEffect } from 'react';\nimport { v4 as uuid } from 'uuid';\n\nimport { Movie, MovieFetchAction, MoviesAction } from 'types';\nimport { getMovies } from 'api/movies';\n\ninterface MoviesState {\n  movies: Movie[]\n  initialized: boolean\n}\n\nexport function useMoviesCollection(): [MoviesState, React.Dispatch<MoviesAction>] {\n  // TODO: Implement all action processing\n\n  const movieReducer = (state: MoviesState, action: MoviesAction): MoviesState => {\n    switch (action.type) {\n      case 'fetch':\n        return { ...state, movies: action.payload.data, initialized: true };\n\n      case 'add':\n        const newMovie: Movie = {\n          ...action.payload.movie,\n          id: uuid(),\n          ratings: []\n        }\n\n        const addMovieListCopy: Movie[] = [...state.movies];\n        addMovieListCopy.push(newMovie)\n\n        return { ...state, movies: addMovieListCopy };\n\n      case 'delete':\n        const deleteMovieListCopy: Movie[] = [...state.movies.filter((movie) => movie.id !== action.payload.movieId)];\n        return { ...state, movies: deleteMovieListCopy };\n\n      case 'rate':\n        return { ...state };\n\n      default:\n        return state\n    }\n  };\n\n  const [state, dispatch] = useReducer(movieReducer, {\n    movies: [],\n    initialized: false,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await getMovies()\n\n      let movieFetchAction: MovieFetchAction = {\n        type: 'fetch',\n        payload: {\n          data: result,\n        }\n      }\n      dispatch(movieFetchAction)\n    };\n    fetchData();\n  }, []);\n\n  return [state, dispatch];\n}","import { StarRating, Button } from 'shared/components';\n\nimport { getAvgRating } from 'movies/ratings';\nimport { Movie, MovieDeleteAction } from 'types';\nimport { useMovies } from './MovieProvider';\n\ninterface MovieCardProps {\n    movie: Movie,\n}\n\nexport const MovieCard = ({ movie }: MovieCardProps) => {\n    const { moviesDispatch } = useMovies()\n    \n    // TODO: implement required functionality\n    function deleteAction(movie: Movie) {\n        let movieDeleteAction: MovieDeleteAction = {\n            type: 'delete',\n            payload: {\n              movieId: movie.id,\n            }\n        }\n        moviesDispatch(movieDeleteAction)\n    }\n\n    return (\n        <div data-testid=\"movie-item\">\n            <img src={ movie.imageUrl} className=\"card-img-top\" alt=\"\" />\n            <div className=\"card-body\">\n                <h4 className=\"card-title\">\n                    { movie.title }\n                </h4>\n                { movie.subtitle}\n                <h6 className=\"card-subtitle mb-2 text-muted\"></h6>\n                <p className=\"text-justify\" style={{ fontSize: '14px' }}>\n                    {movie.description}\n                </p>\n                <Button onClick={() => deleteAction(movie)}>Delete</Button>\n            </div>\n            <div className=\"card-footer\">\n                <div className=\"clearfix\">\n                <div className=\"float-left mt-1\">\n                    { StarRating(\n                        {\n                            rating: getAvgRating(movie),\n                            onRate: () => 5\n                        })\n                    }\n    \n                </div>\n                { getAvgRating(movie) }\n                <div className=\"card-footer-badge float-right badge badge-primary badge-pill\"></div>\n                </div>\n            </div>\n        </div>    \n    )\n};\n","import React, { useState } from 'react';\n\nimport { MovieCard } from './MovieCard';\nimport { AddMovieButton } from './AddMovieButton';\nimport { AddMovieForm } from './AddMovieForm';\nimport { Card } from 'shared/components';\n\nimport { useMovies } from './MovieProvider';\nimport { Movie, MovieAddAction } from \"types\"\n\nexport const MovieList = () => {\n  const { movies, moviesDispatch } = useMovies();\n  const [displayOptionType, setDisplayOptionType] = useState('button');\n\n  function changeNewMovieMode() {\n    displayOptionType === 'button' ? setDisplayOptionType('form') : setDisplayOptionType('button')\n  }\n\n  function addNewMovie(data: Omit<Movie, \"id\" | \"ratings\">) {\n    let movieAddAction: MovieAddAction = {\n      type: 'add',\n      payload: {\n        movie: {\n          title: data.title,\n          subtitle: data.subtitle,\n          description: data.description,\n          imageUrl: data.imageUrl,\n        }\n      }\n    }\n    moviesDispatch(movieAddAction)\n  }\n\n  return (\n    <div className=\"card-deck\">\n      {movies.map(movie => (\n        <Card key={movie.id}>\n          <MovieCard key={movie.id} movie={movie} />\n        </Card>      \n      ))}\n      <Card>\n        { displayOptionType === 'button' ? \n        <AddMovieButton onClick={() => {\n          changeNewMovieMode()\n        } }/> \n        : \n        <AddMovieForm \n          onSubmit={(data) => { addNewMovie(data) }} \n          onCancel={() => changeNewMovieMode()} \n        />}\n      </Card>\n    </div>\n  );\n}\n","import './App.css';\n\nimport { Header } from './shared/components';\nimport { MovieList } from './movies/components';\nimport { MovieProvider } from 'movies/components/MovieProvider';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header title='React Movie Management Application'/>\n      <div className=\"mt-5\">\n        <MovieProvider>\n          <div className=\"container-fluid\">\n            <div className=\"d-flex flex-row\">\n              <div className=\"col-sm-12\">\n                <MovieList/>\n              </div>\n            </div>\n          </div>\n        </MovieProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './styles/app.css';\nimport reportWebVitals from './reportWebVitals';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}